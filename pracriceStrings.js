// String26. Дано целое число N (> 0) и строка S.
//     Преобразовать строку S в строку длины N следующим образом: если длина строки S больше N,
//     то отбросить первые символы, если длина строки S меньше N, то в ее начало добавить символы «.» (точка).
//
//     String27. Даны целые положительные числа N1 и N2 и строки S1 и S2.
//     Получить из этих строк новую строку, содержащую первые N1 символов строки S1 и последние N2 символов строки S2 (в указанном порядке).
//
// String28. Дан символ C и строка S. Удвоить каждое вхождение символа C в строку S.
//
//     String41. Дана строка, состоящая из русских слов, разделенных пробелами (одним или несколькими). Найти количество слов в строке.
//
//     String42. Дана строка, состоящая из русских слов, набранных заглавными буквами и разделенных пробелами (одним или несколькими).
// Найти количество слов, которые начинаются и заканчиваются одной и той же буквой.
//
//     String57. Дана строка-предложение с избыточными пробелами между словами. Преобразовать ее так, чтобы между словами был ровно один пробел.
//
//     String58. Дана строка, содержащая полное имя файла, то есть имя диска, список каталогов (путь), собственно имя и расширение.
//     Выделить из этой строки имя файла (без расширения).
//
// String61. Дана строка, содержащая полное имя файла. Выделить из этой строки название последнего каталога (без символов «\»).
// Если файл содержится в корневом каталоге, то вывести символ «\».
//
// Matrix49. Дана матрица размера M × N. Преобразовать матрицу, поменяв местами минимальный и максимальный элемент в каждой строке.
//
//     Matrix80. Дана квадратная матрица A порядка M. Найти сумму элементов ее главной диагонали, и побочной диагонали
// (главная диагональ: A[1,1], A[2,2], A[3,3], . . ., A[M,M]. побочная : A[1,M], A[2,M−1], A[3,M−2], . . ., A[M,1].